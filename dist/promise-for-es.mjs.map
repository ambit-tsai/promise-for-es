{"version":3,"file":"promise-for-es.mjs","sources":["../src/helpers/utils.ts","../src/helpers/enqueueJob.ts","../src/helpers/PromiseReactionJob.ts","../src/helpers/createResolvingFunctions.ts","../src/helpers/newPromiseCapability.ts","../src/ES6PromiseImpl.ts"],"sourcesContent":["\r\nexport const globalObject = typeof window === 'object'\r\n    ? window\r\n    : typeof global === 'object' ? global : self;\r\n\r\n\r\nexport const UNDEFINED = undefined;\r\n\r\n\r\nexport let forEach: <T>(\r\n    iterable: Iterable<T>,\r\n    callback: (element: T, index: number, iterable: Iterable<T>) => void\r\n) => void;\r\ntry {\r\n    forEach = <any> Function('iterable', 'callback', \r\n        'var i = 0;' +\r\n        'for (var element of iterable) {' +\r\n        '  callback(element, i++, iterable);' +\r\n        '}'\r\n    );\r\n} catch (error) {\r\n    forEach = function (array: [], callback: Function) {\r\n        for (let i = 0, len = array.length; i < len; ++i) {\r\n            callback(array[i], i++, array);\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport function isFunction(value: unknown): boolean {\r\n    return typeof value === 'function';\r\n}\r\n\r\n\r\nexport function isObject(value: unknown): boolean {\r\n    return value ? typeof value === 'object' || isFunction(value) : false;\r\n}\r\n\r\n\r\nexport function throwTypeError(msg: string): never {\r\n    throw new TypeError(msg);\r\n}\r\n\r\n\r\nexport function throwWhenCallingOnNonObject(method: string): never {\r\n    throwTypeError(`Promise.${method} called on non-object`);\r\n}\r\n\r\n\r\nexport let AggregateError;\r\nif (isFunction(globalObject.AggregateError)) {\r\n    AggregateError = globalObject.AggregateError;\r\n} else {\r\n    AggregateError = function AggregateError(errors, message) {\r\n        this.errors = errors;\r\n        this.message = message;\r\n    };\r\n    AggregateError.prototype = Error.prototype;\r\n}\r\n\r\n\r\nexport let set: (obj: object, key: PropertyKey, val: unknown, readonly?: boolean) => void;\r\ntry {\r\n    // In IE 8, `Object.defineProperty` is only effective on `Element` object, \r\n    // `document` and `window`. The program will throw an exception when \r\n    // `Object.defineProperty` works with others.\r\n    Object.defineProperty({}, '', {});\r\n    \r\n    set = (obj, key, val, readonly = false) => {\r\n        Object.defineProperty(obj, key, {\r\n            configurable: !readonly,\r\n            value: val,\r\n        });\r\n    };\r\n} catch (error) {\r\n    set = (obj, key, val) => obj[key] = val;\r\n}\r\n","import { globalObject, UNDEFINED } from \"./utils\";\r\n\r\n\r\n// @ts-ignore: the property \"WebKitMutationObserver\" is unrecognized\r\nlet MutationObserver = globalObject.MutationObserver || globalObject.WebKitMutationObserver;\r\nexport let enqueueJob: (callback: Function, args: unknown[]) => void;\r\n\r\n\r\nif (MutationObserver) {\r\n    enqueueJob = (callback, args) => {\r\n        const observer = new MutationObserver(() => {\r\n            callback.apply(UNDEFINED, args);\r\n            observer.disconnect();\r\n        });\r\n        const el = document.createElement('a');\r\n        observer.observe(el, { attributes: true });\r\n        el.setAttribute('b', '');\r\n    };\r\n} else {\r\n    enqueueJob = (callback, args) => {\r\n        setTimeout(() => callback.apply(UNDEFINED, args));\r\n    };\r\n}\r\n","\r\nexport function PromiseReactionJob<T, U>(reaction: PromiseReaction<T, U>, value: T) {\r\n    const capability = reaction.Capability;\r\n    const handler = reaction.Handler;\r\n    try {\r\n        let result: U | ES6Promise<U>;\r\n        if (handler) {\r\n            result = handler(value);\r\n        } else if (reaction.Type === 'Reject') {\r\n            throw value;\r\n        } else {\r\n            result = <U><unknown> value;\r\n        }\r\n        capability.Resolve(result);\r\n    } catch (error) {\r\n        capability.Reject(error);\r\n    }\r\n}\r\n","import { enqueueJob } from \"./enqueueJob\";\r\nimport { PromiseReactionJob } from \"./PromiseReactionJob\";\r\nimport { isFunction, isObject, set, throwTypeError, UNDEFINED } from \"./utils\";\r\n\r\n\r\nexport function createResolvingFunctions<T>(promise: ES6Promise<T>): {\r\n    resolve: PromiseResolveFunction<T>,\r\n    reject: PromiseRejectFunction,\r\n} {\r\n    let alreadyResolved = false;\r\n    return {\r\n        resolve(resolution) {\r\n            if (alreadyResolved) return;\r\n            alreadyResolved = true;\r\n            try {\r\n                if (resolution === promise) {\r\n                    throwTypeError('Chaining cycle detected for promise');\r\n                }\r\n                if (isObject(resolution)) {\r\n                    const then = (<any> resolution).then;\r\n                    if (isFunction(then)) {\r\n                        enqueueJob(PromiseResolveThenableJob, [promise, resolution, then]);\r\n                        return;\r\n                    }\r\n                }\r\n                fulfillPromise(promise, resolution as T);\r\n            } catch (error) {\r\n                rejectPromise(promise, error);\r\n            }\r\n        },\r\n\r\n        reject(reason) {\r\n            if (!alreadyResolved) {\r\n                alreadyResolved = true;\r\n                rejectPromise(promise, reason);\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\n\r\nfunction  fulfillPromise<T>(promise: ES6Promise<T>, value: T) {\r\n    set(promise, '_state', PromiseState.Fulfilled, true);\r\n    set(promise, '_result', value, true);\r\n    const reactions = promise._fulfillReactions;\r\n    set(promise, '_fulfillReactions', UNDEFINED, true);\r\n    set(promise, '_rejectReactions', UNDEFINED, true);\r\n    triggerPromiseReactions(reactions, value);\r\n}\r\n\r\n\r\nfunction rejectPromise<T>(promise: ES6Promise<T>, reason: unknown) {\r\n    set(promise, '_state', PromiseState.Rejected, true);\r\n    set(promise, '_result', reason, true);\r\n    const reactions = promise._rejectReactions;\r\n    set(promise, '_fulfillReactions', UNDEFINED, true);\r\n    set(promise, '_rejectReactions', UNDEFINED, true);\r\n    if (!promise._isHandled) {\r\n        // TODO: rejectionhandled\r\n    }\r\n    triggerPromiseReactions(reactions, reason);\r\n}\r\n\r\n\r\nfunction triggerPromiseReactions<T>(reactions: PromiseReaction<T>[], value: T) {\r\n    for (const reaction of reactions) {\r\n        enqueueJob(PromiseReactionJob, [reaction, value]);\r\n    }\r\n}\r\n\r\n\r\nfunction PromiseResolveThenableJob<T>(promise: ES6Promise<T>, thenable: PromiseLike<T>, then: Function) {\r\n    const { resolve, reject } = createResolvingFunctions(promise);\r\n    try {\r\n        then.call(thenable, resolve, reject);\r\n    } catch (error) {\r\n        reject(error);\r\n    }\r\n}\r\n","import { isFunction, isObject, throwTypeError } from \"./utils\";\r\n\r\n\r\nexport function newPromiseCapability<T>(constructor: ES6PromiseConstructor): PromiseCapability<T> {\r\n    if (!(isFunction(constructor) && isObject(constructor.prototype))) {\r\n        throwTypeError('call on non-constructor');\r\n    }\r\n    const capability = <PromiseCapability<T>> {};\r\n    capability.Promise = new constructor<T>((resolve, reject) => {\r\n        capability.Resolve = resolve;\r\n        capability.Reject = reject;\r\n    });\r\n    if (!isFunction(capability.Resolve) || !isFunction(capability.Reject)) {\r\n        throwTypeError('Promise resolve or reject function is not callable');\r\n    }\r\n    return capability;\r\n}\r\n","import { createResolvingFunctions } from './helpers/createResolvingFunctions';\r\nimport { enqueueJob } from './helpers/enqueueJob';\r\nimport { newPromiseCapability } from './helpers/newPromiseCapability';\r\nimport { PromiseReactionJob } from './helpers/PromiseReactionJob';\r\nimport { throwWhenCallingOnNonObject, isFunction, isObject, set, throwTypeError, forEach, UNDEFINED, AggregateError } from './helpers/utils';\r\n\r\n\r\nexport default class ES6PromiseImpl<T> implements ES6Promise<T> {\r\n    _state: PromiseState\r\n    _fulfillReactions: PromiseReaction<T>[]\r\n    _rejectReactions: PromiseReaction<T>[]\r\n    _result: T\r\n    _isHandled: boolean\r\n\r\n\r\n    constructor(executor: PromiseExecutor<T>) {\r\n        const promise = this;\r\n        if (!(promise instanceof ES6PromiseImpl)) {\r\n            throwTypeError(\"call Promise constructor without 'new'\");\r\n        }\r\n        if (!isFunction(executor)) {\r\n            throwTypeError('argument is not a function');\r\n        }\r\n        set(promise, '_state', PromiseState.Pending);\r\n        set(promise, '_fulfillReactions', []);\r\n        set(promise, '_rejectReactions', []);\r\n        set(promise, '_result', UNDEFINED);\r\n        set(promise, '_isHandled', false);\r\n        const { resolve, reject } = createResolvingFunctions(promise);\r\n        try {\r\n            executor(resolve, reject);\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    }\r\n\r\n\r\n    then<U, V>(\r\n        onFulfilled?: (value: T) => U | ES6Promise<U>,\r\n        onRejected?: (reason: T) => V | ES6Promise<V>\r\n    ): ES6Promise<U | V> {\r\n        const promise = this;\r\n        if (!(promise instanceof ES6PromiseImpl)) {\r\n            throwTypeError('Promise.prototype.then called on incompatible object');\r\n        }\r\n        const resultCapability = newPromiseCapability<U | V>(ES6PromiseImpl);\r\n        const fulfillReaction: PromiseReaction<T, U | V> = {\r\n            Capability: resultCapability,\r\n            Type: 'Fulfill',\r\n            Handler: isFunction(onFulfilled) ? onFulfilled : UNDEFINED,\r\n        };\r\n        const rejectReaction: PromiseReaction<T, U | V> = {\r\n            Capability: resultCapability,\r\n            Type: 'Reject',\r\n            Handler: isFunction(onRejected) ? onRejected : UNDEFINED,\r\n        };\r\n        if (promise._state === PromiseState.Pending) {\r\n            promise._fulfillReactions.push(fulfillReaction);\r\n            promise._rejectReactions.push(rejectReaction);\r\n        } else if (promise._state === PromiseState.Fulfilled) {\r\n            enqueueJob(PromiseReactionJob, [fulfillReaction, promise._result]);\r\n        } else {\r\n            if (!promise._isHandled) {\r\n                // TODO: unhandledrejection\r\n            }\r\n            enqueueJob(PromiseReactionJob, [rejectReaction, promise._result]);\r\n        }\r\n        set(promise, '_isHandled', true);\r\n        return resultCapability.Promise;\r\n    }\r\n    \r\n\r\n    catch<U>(onRejected?: (reason: T) => U | ES6Promise<U>): ES6Promise<U> {\r\n        return this.then(UNDEFINED, onRejected);\r\n    }\r\n\r\n\r\n    finally(onFinally?: () => void): ES6Promise<T> {\r\n        let thenFinally, catchFinally;\r\n        const context = this;\r\n        if (isFunction(onFinally)) {\r\n            thenFinally = value => {\r\n                const result = onFinally();\r\n                const promise = (<ES6PromiseConstructor> context.constructor).resolve(result);\r\n                return promise.then(() => value);\r\n            };\r\n            catchFinally = reason => {\r\n                const result = onFinally();\r\n                const promise = (<ES6PromiseConstructor> context.constructor).resolve(result);\r\n                return promise.then(() => { throw reason });\r\n            };\r\n        } else {\r\n            thenFinally = onFinally;\r\n            catchFinally = onFinally;\r\n        }\r\n        return context.then(thenFinally, catchFinally);\r\n    }\r\n\r\n\r\n    toString(): string {\r\n        return '[object Promise]';\r\n    }\r\n\r\n\r\n    toLocaleString(): string {\r\n        return '[object Promise]';\r\n    }\r\n\r\n\r\n    static resolve<U>(value?: U | ES6Promise<U>): ES6Promise<U> {\r\n        const context = this;\r\n        if (!isObject(context)) {\r\n            throwWhenCallingOnNonObject('resolve');\r\n        }\r\n        if (isObject(value) && value instanceof context) {\r\n            return value;\r\n        }\r\n        const capability = newPromiseCapability<U>(context); \r\n        capability.Resolve(value);\r\n        return capability.Promise;\r\n    }\r\n    \r\n\r\n    static reject<U>(reason?: U): ES6Promise<U> {\r\n        if (!isObject(this)) {\r\n            throwWhenCallingOnNonObject('reject');\r\n        }\r\n        const capability = newPromiseCapability<U>(this);\r\n        capability.Reject(reason);\r\n        return capability.Promise;\r\n    }\r\n\r\n    \r\n    static all<U>(iterable: Iterable<U | ES6Promise<U>>): ES6Promise<U[]> {\r\n        const context = this;\r\n        if (!isObject(context)) {\r\n            throwWhenCallingOnNonObject('all');\r\n        }\r\n        const capability = newPromiseCapability<U[]>(context);\r\n        try {\r\n            let count = 0;\r\n            const result: U[] = [];\r\n            forEach(iterable, (element, i) => {\r\n                count++;\r\n                context.resolve(element).then(value => {\r\n                    result[i] = value;\r\n                    if (!--count) {\r\n                        capability.Resolve(result);\r\n                    }\r\n                }, capability.Reject);\r\n            });\r\n            if (count) {\r\n                result.length = count;\r\n            } else {\r\n                capability.Resolve(result);\r\n            }\r\n        } catch (error) {\r\n            capability.Reject(error);\r\n        }\r\n        return capability.Promise;\r\n    }\r\n\r\n\r\n    static race<U>(iterable: Iterable<U | ES6Promise<U>>): ES6Promise<U> {\r\n        const context = this;\r\n        if (!isObject(context)) {\r\n            throwWhenCallingOnNonObject('race');\r\n        }\r\n        const capability = newPromiseCapability<U>(context);\r\n        try {\r\n            forEach(iterable, element => {\r\n                context.resolve(element).then(capability.Resolve, capability.Reject);\r\n            });\r\n        } catch (error) {\r\n            capability.Reject(error);\r\n        }\r\n        return capability.Promise;\r\n    }\r\n\r\n\r\n    static allSettled<U>(iterable: Iterable<U | ES6Promise<U>>): ES6Promise<PromiseSettledResult<U>[]> {\r\n        const context = this;\r\n        if (!isObject(context)) {\r\n            throwWhenCallingOnNonObject('allSettled');\r\n        }\r\n        const capability = newPromiseCapability<PromiseSettledResult<U>[]>(context);\r\n        try {\r\n            let count = 0;\r\n            const result: PromiseSettledResult<U>[] = [];\r\n            forEach(iterable, (element, i) => {\r\n                count++;\r\n                context.resolve(element).then(value => {\r\n                    result[i] = {\r\n                        status: PromiseState.Fulfilled,\r\n                        value,\r\n                    };\r\n                    if (!--count) capability.Resolve(result);\r\n                }, reason => {\r\n                    result[i] = {\r\n                        status: PromiseState.Rejected,\r\n                        reason,\r\n                    };\r\n                    if (!--count) capability.Resolve(result);\r\n                });\r\n            });\r\n            if (count) {\r\n                result.length = count;\r\n            } else {\r\n                capability.Resolve(result);\r\n            }\r\n        } catch (error) {\r\n            capability.Reject(error);\r\n        }\r\n        return capability.Promise;\r\n    }\r\n\r\n\r\n    static any<U>(iterable: Iterable<U | ES6Promise<U>>): ES6Promise<U> {\r\n        const context = this;\r\n        if (!isObject(context)) {\r\n            throwWhenCallingOnNonObject('any');\r\n        }\r\n        const capability = newPromiseCapability<U>(context);\r\n        try {\r\n            let count = 0;\r\n            const errors = [];\r\n            const message = 'All Promises rejected';\r\n            forEach(iterable, (element, i) => {\r\n                count++;\r\n                context.resolve(element).then(capability.Resolve, reason => {\r\n                    errors[i] = reason;\r\n                    if (!--count) {\r\n                        capability.Reject(new AggregateError(errors, message));\r\n                    }\r\n                });\r\n            });\r\n            if (count) {\r\n                errors.length = count;\r\n            } else {\r\n                capability.Reject(new AggregateError(errors, message));\r\n            }\r\n        } catch (error) {\r\n            capability.Reject(error);\r\n        }\r\n        return capability.Promise;\r\n    }\r\n\r\n}\r\n"],"names":["forEach","AggregateError","set","globalObject","window","global","self","UNDEFINED","undefined","Function","error","array","callback","i","len","length","isFunction","value","isObject","throwTypeError","msg","TypeError","throwWhenCallingOnNonObject","method","errors","message","this","prototype","Error","Object","defineProperty","obj","key","val","readonly","configurable","enqueueJob","MutationObserver","WebKitMutationObserver","PromiseReactionJob","reaction","capability","Capability","handler","Handler","result","Type","Resolve","Reject","createResolvingFunctions","promise","alreadyResolved","resolve","resolution","then","PromiseResolveThenableJob","reactions","_fulfillReactions","triggerPromiseReactions","fulfillPromise","rejectPromise","reject","reason","_rejectReactions","_isHandled","reactions_1","_i","thenable","_a","call","newPromiseCapability","constructor","Promise","args","observer","apply","disconnect","el","document","createElement","observe","attributes","setAttribute","setTimeout","executor","ES6PromiseImpl","onFulfilled","onRejected","resultCapability","fulfillReaction","rejectReaction","_state","push","_result","onFinally","thenFinally","catchFinally","context","iterable","count_1","result_1","element","count_2","result_2","status","count_3","errors_1","message_1"],"mappings":"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"}